using System;
using System.Collections.Generic;
using System.Text;

namespace BlockchainParser.Tests
{
    internal class TestData
    {
        public static byte[] CoinbaseInput = new byte[]
{
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // outpoint TXID
                0xff, 0xff, 0xff, 0xff, // outpoint index
                0x29, // Bytes in coinbase script
                0x03, // Bytes in height
                0x4e, 0x01, 0x05, // Height
                0x06, 0x2f, 0x50, 0x32, 0x53, 0x48, 0x2f, 0x04, 0x72, 0xd3, 0x54, 0x54, 0x08, 0x5f, 0xff, 0xed, 0xf2, 0x40, 0x00, 0x00, 0xf9, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x20, 0x26, 0x20, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x20, 0x21, // Coinbase Script
                0x00, 0x00, 0x00, 0x00 // Sequence
};
        public static byte[] Output1 = new byte[]
        {
            0x2c, 0x37, 0x44, 0x95, 0x00, 0x00, 0x00, 0x00, // satoshis (25.04275756 BTC)
            0x19, 0x76, 0xa9, 0x14, 0xa0, 0x9b, 0xe8, 0x04, 0x0c, 0xbf, 0x39, 0x99, 0x26, 0xae, 0xb1, 0xf4, 0x70, 0xc3, 0x7d, 0x13, 0x41, 0xf3, 0xb4, 0x65, 0x88, 0xac, // P2PKH script
        };
    }
}
